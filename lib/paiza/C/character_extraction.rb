#part4
tag_a, tag_b = gets.chomp.split
S = gets.chomp.to_s

# 1,1個目のidxまで求められる
# ２、全体の文字列から２つ目のタグのidx値を取得、
# ３、全体の文字列から一つ目のタグを検索、１つ目のidx値、２つ目のidexをセットで配列に格納、
# 以降１つ目のタグ検索してあれば同様の処理、なければ終わり

# 1つ目の処理→文字列処理は正規表現
first_str_index = S.index(tag_a)
start_and_end_index = []

while first_str_index
  tag_a_length = tag_a.length - 1
  first_tag_end = first_str_index + tag_a_length
  second_tag_index = tag_b.index - 1

  first_str_index = S.index(tag_a, first_str_index + 1)
end

def start_tag_search()

end

文字列から１つ目のタグ、２つ目のタグを繰り返し検索
first_str_indexを検索、あれば以降の処理

またfirst_str_indexを検索、あれば以降の処理。。を繰り返したい



# 長さ M の 2 つの異なったタグの組で囲まれた部分を、ある長さ N のテキストデータから抽出しようとしています。

# 1 行目に < と > で囲まれた半角英数字のタグがスペース区切りで開始,終了タグの順で入力されます。

# 2 行目に抽出を行う対象のテキストデータが入力されます。テキストデータは半角英数字とタグのみで構成されています。

# 抽出の手順は

# 1.テキストデータの先頭から、開始タグを見つけます。
# 2.開始タグ末尾から終了タグを探します。
# 3.開始タグから終了タグまでの間の文字列を出力します。もし、文字列が存在しない場合は<blank>と出力します。
# 4.終了タグの末尾を先頭として1.から再度繰り返します。
# 5.テキストデータの末尾に到達したら終了します。

# 文字列検索、開始の文字列を検索、そこから終わりの文字列を検索、終わりの文字列までを変数にぶち込む、なければ終了何もしない
# さらに検索、開始タグがあれば終わり文字を検索、開始タグから終わり文字までの文字列を変数にぶち込む
# 以後繰り返し
